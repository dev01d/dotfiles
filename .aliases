# Don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTFILESIZE=2000
HISTSIZE=1000
#! Aliases
alias vim="nvim"
alias un="extract"
alias c="codeWD"
alias cf="codeFinder"
alias less="less -FSRXc"
alias {rm,rmr}="trash -v"
alias tfaa="tfa -auto-approve"
alias tfda="tfd -auto-approve"
alias bu="~/.dotfiles/scripts/brew_maint.py"
alias ap="ansible-playbook"
alias k="kubecolor"
alias kctx="kubectx"
alias dtest="docker run --rm -it"
alias {wip,whatip}="curl -4 ifconfig.co/; curl -6 ifconfig.co/"
alias del_node='find $HOME/Sites -name 'node_modules' -type d -prune -exec trash -v '{}' +'
alias lscpu="sysctl -n machdep.cpu.brand_string && sysctl -a | grep \.features\: | fmt -w 48"
alias flushdns="sudo killall -HUP mDNSResponder;sudo killall mDNSResponderHelper;sudo dscacheutil -flushcache"
alias penv="source .venv/bin/activate"
alias k0sctl="DISABLE_TELEMETRY=true k0sctl"
alias tabby="tabby serve --device metal --model TabbyML/StarCoder-3B"

#! Functions
# Generate ed25519 with no interaction
function keygen(){
  ssh-keygen -t ed25519 -q -N '' -C '' -f ~/.ssh/"$1"
}

# Toggles between light or dark mode on macOS
function theme() {
  osascript -e 'tell application "System Events" to tell appearance preferences to set dark mode to not dark mode'
}

# Set window title
function title() {
  echo -ne "\033]0;*\007";
}

# F grep
# Usage: f /some/path [grep options]
function f() {
  local path="$1"
  shift
  find "$path" -follow -name '*' | xargs grep "$*"
}

# Usage: $ gh_latest "dev01d/inv"
# v0.3.0
function gh_latest() {
  curl --silent "https://api.github.com/repos/$1/releases/latest" | # Get latest release from GitHub api
    grep '"tag_name":' |                                            # Get tag line
    sed -E 's/.*"([^"]+)".*/\1/'                                    # Pluck JSON value
}

# cd to currnet Finder loaction
function cdf() {
  target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
    if [ "$target" != "" ]; then
      cd "$target" || exit; pwd
    else
      echo 'No Finder window found' >&2
    fi
}

# Open VSCode at current Finder location
function codeFinder() {
  dest=$(eval cdf)
  eval code "$dest"
}

function codeWD() {
  if [ -z "$1" ]; then
    set -- "./"
  fi
  code "$1"
}

function ktdel() {
  kubectl get pods --all-namespaces | grep 'Terminating\|Unknown\|Error\|Evicted\|Pending' | awk '{print $2 " -n " $1}' | xargs kubectl delete pod --grace-period=0 --force
}

#? Exports
# GO
export GOPATH=$HOME/.go

# Yarn
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# K8s
export KUBECONFIG=.kube/config:$HOME/.kube/config:$PWD/kube_config_cluster.yml:$PWD/.kube/kube_config_cluster.yml

# bat
export BAT_THEME="TwoDark"

# iterm2 int
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh" || true
